% Параметры
N = 100; % Фиксированное значение N
M_values = [128, 256, 512, 1024]; % Различные значения M
a = 5;
hx = 2 * a / N; % Шаг по x
input_field = @(x) sin(4*pi*x);

% Шаг 1: Дискретизация входной функции f(x)
x = linspace(-a, a, N);
f = input_field(x);

for M = M_values
    % Шаг 2: Дополнение вектора f нулями до размерности M
    f_padded = [zeros(1, (M-N)/2), f, zeros(1, (M-N)/2)];

    % Шаг 3: Разбить вектор f на две половины и поменять их местами
    f_swapped = [f_padded((M/2+1):end), f_padded(1:(M/2))];

    % Шаг 4: Выполнить БПФ от f и умножить результат на шаг hx
    F = fft(f_swapped) * hx;

    % Шаг 5: Разбить вектор F на две половины и поменять их местами
    F = [F((M/2+1):end), F(1:(M/2))];

    % Шаг 6: «Вырезать» центральную часть вектора F, оставив центральные N элементов
    F = F((M/2-N/2+1):(M/2+N/2));

    % Шаг 7: Пересчитать область задания функции Fa(u) по формуле (7)
    b = N^2 / (4 * a * M);
    u = linspace(-b, b, N);

    % Вывод результатов
    figure;
    subplot(2,1,1);
    plot(u, abs(F));
    title(['амплитуда F(u) для M = ', num2str(M)]);
    xlabel('u');
    ylabel('F(u)');

    subplot(2,1,2);
    plot(u, angle(F));
    title(['фаза F(u) для M = ', num2str(M)]);
    xlabel('u');
    ylabel('F(u)');
end
